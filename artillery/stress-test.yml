config:
  target: "http://localhost"
  phases:
    - duration: 60
      arrivalRate: 5
      name: "Warm up"
    - duration: 120
      arrivalRate: 25
      name: "Ramp up to 250 users"
    - duration: 180
      arrivalRate: 50
      name: "Ramp up to 500 users"
    - duration: 240
      arrivalRate: 100
      name: "Peak load - 1000 users"
  processor: "./processor.js"
  variables:
    productIds:
      - "507f1f77bcf86cd799439011"
      - "507f1f77bcf86cd799439012"
      - "507f1f77bcf86cd799439013"
  plugins:
    expect: {}
    metrics-by-endpoint: {}
  ensure:
    thresholds:
      - http.response_time.p50: 200
      - http.response_time.p95: 500
      - http.response_time.p99: 1000
      - http.codes.200: 95

scenarios:
  - name: "Browse Products"
    weight: 40
    flow:
      - get:
          url: "/"
          expect:
            - statusCode: 200
            - contentType: text/html
      - think: 3
      - get:
          url: "/api/v1/products?limit=20&page=1"
          expect:
            - statusCode: 200
            - contentType: json
            - hasProperty: products
          capture:
            - json: "$.products[0]._id"
              as: "productId"
      - think: 2
      - get:
          url: "/api/v1/products/{{ productId }}"
          expect:
            - statusCode: 200
            - contentType: json

  - name: "Quick Checkout"
    weight: 30
    flow:
      - get:
          url: "/api/v1/products?limit=10"
          capture:
            - json: "$.products[0]._id"
              as: "productId"
      - think: 5
      - post:
          url: "/api/v1/leads"
          json:
            name: "{{ $randomString(10) }}"
            email: "{{ $randomString(10) }}@test.com"
            productId: "{{ productId }}"
            quantity: "{{ $randomNumber(1, 5) }}"
            address:
              street: "123 Test St"
              city: "Test City"
              state: "TS"
              zipCode: "12345"
              country: "USA"
          expect:
            - statusCode: 202
            - hasProperty: orderId

  - name: "User Registration and Login"
    weight: 20
    flow:
      - post:
          url: "/api/v1/auth/register"
          json:
            name: "{{ $randomString(10) }}"
            email: "{{ $randomString(10) }}@test.com"
            password: "password123"
          capture:
            - json: "$.accessToken"
              as: "token"
          expect:
            - statusCode:
                - 201
                - 409
      - think: 2
      - post:
          url: "/api/v1/auth/login"
          json:
            email: "test@test.com"
            password: "password123"
          expect:
            - statusCode:
                - 200
                - 401

  - name: "Heavy Load Test"
    weight: 10
    flow:
      - loop:
          - get:
              url: "/api/v1/products?page={{ $loopCount }}"
              expect:
                - statusCode: 200
          - think: 1
        count: 5