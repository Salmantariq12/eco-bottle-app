version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000/api/v1
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - eco-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - NODE_ENV=development
      # MongoDB Atlas Connection String (CONFIGURED)
      - MONGO_URI=mongodb+srv://zeeshanyousaf_db_user:2V3HZzGR6rmgqOaz@cluster0.fapt4i9.mongodb.net/eco_bottle?retryWrites=true&w=majority&appName=Cluster0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-here-change-in-production
      - JWT_REFRESH_SECRET=your-refresh-secret-here-change-in-production
      - FRONTEND_URL=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=1000
    depends_on:
      - redis
    networks:
      - eco-network
    restart: unless-stopped

  # No need for local MongoDB container when using Atlas!
  # mongo container removed

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - eco-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "9080:80"
      - "9443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - eco-network
    restart: unless-stopped

networks:
  eco-network:
    driver: bridge

volumes:
  redis-data: